#n Wyam.Razor
#n Wyam.Yaml
#n Wyam.Markdown

Settings["site.url"] = "https://notebook.craigpaton.uk";
Settings["site.base-url"] = "";
Settings["site.asset-base-url"] = "https://notebook-cdn.craigpaton.uk/notebook";
Settings["site.title"] = "Notebook";
Settings["site.description"] = "Programmers notebook";

public static int SortPages(IDocument x, IDocument y) {
    if (x.Source == null && y.Source == null)
    {
        return x.String("RelativeFilePath").CompareTo(y.String("RelativeFilePath"));
    }

    if (x.Source == null)
    {
        return 1;
    }

    if (y.Source == null)
    {
        return -1;
    }

    var directoryComparison = x.Source.Directory.FullPath.CompareTo(y.Source.Directory.FullPath);
    if (directoryComparison != 0)
    {
        return directoryComparison;
    }

    return x.String("Title", string.Empty).CompareTo(y.String("Title", string.Empty));
}

Pipelines.Add("Pages",
    ReadFiles(@"**\*.md"),
    Meta("CanonicalUrl", new Uri(new Uri(@doc.String("site.url")), @doc.String("RelativeFilePath").Replace(".md", ".html")).AbsoluteUri),
    FrontMatter(Yaml()),
    WriteFiles(".html").OnlyMetadata()
);

Pipelines.Add("PageTree",
    Documents("Pages"),
    Tree().WithNesting(true, true).WithSort(SortPages)
);

Pipelines.Add("RenderPages",
    Documents("Pages"),
    Markdown().UseExtensions(),
    Replace("site.asset-base-url", Settings["site.asset-base-url"]),
    Razor().WithLayout("/shared/_page.cshtml"),
    WriteFiles()
);

Pipelines.Add("FrontPage",
    ReadFiles("**/{!_,}*.cshtml"),
    Meta("CanonicalUrl", new Uri(new Uri(@doc.String("site.url")), @doc.String("RelativeFilePath").Replace(".cshtml", ".html")).AbsoluteUri),
    Razor().WithLayout("/shared/_default.cshtml"),
    WriteFiles(".html")
);    

Pipelines.Add("Resources",
	CopyFiles("css/*.css"),
	CopyFiles("js/*.js")
);    

Pipelines.Add("GitHubPages",
    CopyFiles("CNAME"),
    CopyFiles(".nojekyll")
);